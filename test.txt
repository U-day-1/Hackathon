import streamlit as st
import numpy as np
from PIL import Image
from tensorflow.keras.preprocessing import image as keras_image
import tensorflow as tf

# Load your trained model
model = tf.keras.models.load_model('brain_tumor_InceptionNet.h5')

# Define the target size
target_size = (150, 150)

# Create the Streamlit app
st.title("Brain Tumor Detection App")

# Sidebar navigation
page = st.sidebar.selectbox("Select a page", ["Welcome", "Tumor Detection"])

# Welcome Page
if page == "Welcome":
    st.header("Welcome to the Brain Tumor Detection App")
    st.write(
        "This app allows you to upload brain MRI scans and predicts the presence of a tumor."
    )
    st.write("Please select 'Tumor Detection' in the sidebar to proceed.")

# Tumor Detection Page
elif page == "Tumor Detection":
    st.header("Brain Tumor Classification")

    # Upload image through Streamlit
    uploaded_file = st.file_uploader(
        "Choose a brain MRI scan...", type=["jpg", "jpeg", "png"]
    )

    if uploaded_file is not None:
        try:
            # Preprocess the image
            image = Image.open(uploaded_file)
            image = image.resize(target_size)

            # Convert the image to array using keras.preprocessing.image
            img_array = keras_image.img_to_array(image)
            img_array = np.expand_dims(img_array, axis=0)  # Add batch dimension
            img_array /= 255.0  # Normalize pixel values to [0, 1]

            # Make prediction
            prediction = model.predict(img_array)

            # Map predictions to class labels
            classes = ["Glioma", "Meningioma", "No Tumor Found", "Pituitary"]
            predicted_class = classes[np.argmax(prediction)]

            # Display the uploaded image
            st.image(image, caption="Uploaded MRI Scan", use_column_width=True)

            # Display the prediction
            st.write("Prediction:", predicted_class)

        except ValueError as e:
            st.error("Error: Please upload a valid image.")
            st.exception(e)


-------------------
import streamlit as st
import numpy as np
from PIL import Image
from tensorflow.keras.preprocessing import image as keras_image
import tensorflow as tf

# Load your trained model
model = tf.keras.models.load_model('brain_tumor_InceptionNet.h5')

# Define the target size
target_size = (150, 150)

# Create the Streamlit app
st.title("Brain Tumor Classification")

# Upload image through Streamlit
uploaded_file = st.file_uploader("Choose a brain MRI scan...", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    try:
        # Preprocess the image
        image = Image.open(uploaded_file)
        image = image.resize(target_size)

        # Convert the image to array using keras.preprocessing.image
        img_array = keras_image.img_to_array(image)
        img_array = np.expand_dims(img_array, axis=0)  # Add batch dimension
        img_array /= 255.0  # Normalize pixel values to [0, 1]

        # Make prediction
        prediction = model.predict(img_array)

        # Map predictions to class labels
        classes = ["Glioma", "Meningioma", "No Tumor Found", "Pituitary"]
        predicted_class = classes[np.argmax(prediction)]

        # Display the uploaded image
        st.image(image, caption="Uploaded MRI Scan", use_column_width=True)

        # Display the prediction
        st.write("Prediction:", predicted_class)

    except ValueError as e:
        st.error("Error: Please upload a valid image.")
        st.exception(e)
